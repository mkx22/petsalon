package njuics.demos.petsalon.controller;

import njuics.demos.petsalon.model.Pet;
import njuics.demos.petsalon.repository.PetRepository;
import njuics.demos.petsalon.service.PetService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController    // This means that this class is a Controller
@RequestMapping(path="/pet") // This means URL's start with /demo (after Application path)
public class PetController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PetRepository petRepository;
    private PetService petService;

    @PostMapping() // Map ONLY GET Requests
    public String addNewPet (@RequestParam Pet pet) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        petRepository.save(pet);
        return "Saved";
    }

    @GetMapping()
    public List<Pet> getAllPets() {
        // This returns a JSON or XML with the users
        return petRepository.findAll();
    }
    @GetMapping("/{id}")
    public
    Pet getPet(@PathVariable Integer id){
        return petService.findPet(id);
    }

    //更新
    @PutMapping("/{id}")
    public String updateOwner(@RequestBody Pet n,@PathVariable Integer id) {
        Pet target = petRepository.findById(id).get();
        target.setName(n.getName());
        target.setType(n.getType());
        petRepository.save(target);
        return "updated";
    }

    //删除
    @DeleteMapping("/{id}")
    public void deletePet(@PathVariable int id){
        //ownerRepository.deleteById(id);
        petService.deletePet(id);
    }

}
