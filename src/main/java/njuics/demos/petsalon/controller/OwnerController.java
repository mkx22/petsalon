package njuics.demos.petsalon.controller;

import njuics.demos.petsalon.model.Owner;
import njuics.demos.petsalon.repository.OwnerRepository;
import njuics.demos.petsalon.service.OwnerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.jws.Oneway;
import java.util.List;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/owner") // This means URL's start with /demo (after Application path)
public class OwnerController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private OwnerRepository ownerRepository;
    private OwnerService ownerService;

    //添加
    @PostMapping("/add") // Map ONLY GET Requests
    public @ResponseBody String addNewOwner (@RequestBody Owner n) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        ownerRepository.save(n);
        return "Saved";
    }

    //查询
    @GetMapping("/getall")
    public @ResponseBody
    List<Owner> getAllOwners() {
        // This returns a JSON or XML with the users
        return ownerRepository.findAll();
    }
    @GetMapping("/{id}")
    public
    Owner getOwner(@PathVariable Integer id){
        return ownerService.findOwner(id);
    }

    //更新
    @PutMapping("/{id}")
    public @ResponseBody String updateOwner(@RequestBody Owner n,@PathVariable Integer id) {
        Owner target = ownerRepository.findById(id).get();
        target.setName(n.getName());
        ownerRepository.save(target);
        return "updated";
    }


    //删除
    @DeleteMapping("/{id}")
    @ResponseBody
    public void deleteOwner(@PathVariable Integer id){
        //ownerRepository.deleteById(id);
        ownerService.deleteOwner(id);
    }



}
