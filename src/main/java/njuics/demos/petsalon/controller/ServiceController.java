package njuics.demos.petsalon.controller;

import njuics.demos.petsalon.model.Service;
import njuics.demos.petsalon.repository.ServiceRepository;
import njuics.demos.petsalon.service.ServeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/service") // This means URL's start with /demo (after Application path)
public class ServiceController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ServiceRepository serviceRepository;
    private ServeService serveService;

    @PostMapping() // Map ONLY GET Requests
    public  String addNewService (@RequestParam Service s) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

//        Service n = new Service();
//        //n.setName(name);
        serviceRepository.save(s);
        return "Saved";
    }

    @GetMapping()
    public List<Service> getAllServices() {
        // This returns a JSON or XML with the users
        return serviceRepository.findAll();
    }
    @GetMapping("/{id}")
    public
    Service getService(@PathVariable Integer id){
        return serveService.findService(id);
    }

    //更新
    @PutMapping("/{id}")
    public String updateOwner(@RequestBody Service n,@PathVariable Integer id) {
        Service target = serviceRepository.findById(id).get();
        target.setDate(n.getDate());
        target.setFee(n.getFee());
        target.setCategory(n.getCategory());
        serviceRepository.save(target);
        return "updated";
    }

    //删除
    @DeleteMapping("/{id}")
    @ResponseBody
    public void deletePet(@PathVariable int id){
        //ownerRepository.deleteById(id);
        serveService.deleteService(id);
    }



}
